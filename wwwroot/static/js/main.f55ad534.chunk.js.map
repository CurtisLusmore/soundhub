{"version":3,"sources":["ConnectionContext.js","ConnectionStatus.jsx","Button.jsx","SoundBoard.jsx","App.jsx","index.js","Connection.js"],"names":["ConnectionContext","React","createContext","ConnectionStatus","props","audio","createRef","state","room","roomState","get","onChange","bind","ev","target","value","this","setState","connection","preventDefault","set","connect","current","play","status","Consumer","class","ref","src","onSubmit","submit","type","placeholder","autoFocus","Component","Button","icon","alt","button","onPlay","elem","classList","add","clearTimeout","bouncer","setTimeout","remove","id","title","aria-title","onClick","send","App","onConnecting","onConnected","onDisconnect","Provider","playHandlers","connectingHandler","connectedHandler","disconnectedHandler","fx","invoke","action","callback","HubConnectionBuilder","withUrl","build","on","console","log","onclose","start","then","catch","error","message","window","location","hash","substr","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"iTAIeA,EAFWC,IAAMC,eAAc,e,OCEzBC,G,wDACnB,WAAYC,GAAQ,IAAD,sBACjB,cAAMA,GAEN,IAAMC,EAAQJ,IAAMK,YAHH,OAIjB,EAAKC,MAAQ,CACXC,KAAMJ,EAAMK,UAAUC,MACtBL,SAEF,EAAKM,SAAW,EAAKA,SAASC,KAAd,gBARC,E,qDAWVC,GACP,IAAML,EAAOK,EAAGC,OAAOC,MACvBC,KAAKC,SAAS,CAAET,W,6BAGXK,EAAIK,GACTL,EAAGM,iBADkB,IAEbV,EAAcO,KAAKZ,MAAnBK,UAFa,EAGGO,KAAKT,MAArBC,EAHa,EAGbA,KAAMH,EAHO,EAGPA,MAKd,OAHAI,EAAUW,IAAIZ,GACdU,EAAWG,QAAQb,GACnBH,EAAMiB,QAAQC,QACP,I,+BAGC,IAAD,OACCC,EAAWR,KAAKZ,MAAhBoB,OADD,EAEiBR,KAAKT,MAArBC,EAFD,EAECA,KAAMH,EAFP,EAEOA,MACd,OAAO,kBAAC,EAAkBoB,SAAnB,MAA6B,SAAAP,GAClC,OAAO,yBAAKQ,MAAM,UAChB,2BAAOC,IAAKtB,EAAOuB,IAAI,qBAEZ,eAAXJ,EACI,yDACA,0BAAMK,SAAU,SAAAhB,GAAE,OAAI,EAAKiB,OAAOjB,EAAIK,KACpC,2BAAOa,KAAK,OAAOC,YAAY,OAAOjB,MAAOP,EAAMG,SAAU,EAAKA,SAAUsB,WAAS,IACrF,2BAAOF,KAAK,SAAShB,MAAM,kC,GAvCKd,IAAMiC,YCsBrCC,EAjBA,YAA+B,IAAnBC,EAAkB,EAAlBA,KAAMR,EAAY,EAAZA,IAAKS,EAAO,EAAPA,IACpC,OAAO,kBAAC,EAAkBZ,SAAnB,MAA6B,SAAUP,GAC5C,IAAMoB,EAASrC,IAAMK,YACfD,EAAQJ,IAAMK,YAKpB,OAJAY,EAAWqB,OAAOH,GAAM,WAVb,IAAUI,KAWZF,EAAOhB,SAVbmB,UAAUC,IAAI,UACnBC,aAAaH,EAAKI,SAClBJ,EAAKI,QAAUC,YAAW,WAAcL,EAAKC,UAAUK,OAAO,YAAc,KASxEzC,EAAMiB,QAAQC,UAET,oCACL,4BAAQI,IAAKW,EAAQZ,MAAM,SAASqB,GAAE,UAAKX,EAAL,WACpCY,MAAOX,EAAKY,aAAYZ,EACxBa,QAAS,kBAAMhC,EAAWiC,KAAKf,KAAQA,GACzC,2BAAOT,IAAKtB,EAAO0C,GAAE,UAAKX,EAAL,WAAoBR,IAAKA,SCjBrC,G,MAAA,WACb,OAAO,yBAAKF,MAAM,QAChB,kBAAC,EAAD,CAAQU,KAAK,eAAKR,IAAI,kBAAkBS,IAAI,SAC5C,kBAAC,EAAD,CAAQD,KAAK,eAAKR,IAAI,mBAAmBS,IAAI,UAC7C,kBAAC,EAAD,CAAQD,KAAK,eAAKR,IAAI,mBAAmBS,IAAI,UAC7C,kBAAC,EAAD,CAAQD,KAAK,eAAKR,IAAI,kBAAkBS,IAAI,eAC5C,kBAAC,EAAD,CAAQD,KAAK,eAAKR,IAAI,qBAAqBS,IAAI,YAC/C,kBAAC,EAAD,CAAQD,KAAK,eAAKR,IAAI,iBAAiBS,IAAI,QAC3C,kBAAC,EAAD,CAAQD,KAAK,eAAKR,IAAI,iBAAiBS,IAAI,QAC3C,kBAAC,EAAD,CAAQD,KAAK,eAAKR,IAAI,qBAAqBS,IAAI,YAC/C,kBAAC,EAAD,CAAQD,KAAK,eAAKR,IAAI,iBAAiBS,IAAI,QAC3C,kBAAC,EAAD,CAAQD,KAAK,eAAKR,IAAI,iBAAiBS,IAAI,QAC3C,kBAAC,EAAD,CAAQD,KAAK,eAAKR,IAAI,iBAAiBS,IAAI,QAC3C,kBAAC,EAAD,CAAQD,KAAK,eAAKR,IAAI,kBAAkBS,IAAI,SAC5C,kBAAC,EAAD,CAAQD,KAAK,eAAKR,IAAI,kBAAkBS,IAAI,SAC5C,kBAAC,EAAD,CAAQD,KAAK,eAAKR,IAAI,sBAAsBS,IAAI,aAChD,kBAAC,EAAD,CAAQD,KAAK,eAAKR,IAAI,iBAAiBS,IAAI,QAC3C,kBAAC,EAAD,CAAQD,KAAK,eAAKR,IAAI,oBAAoBS,IAAI,WAC9C,kBAAC,EAAD,CAAQD,KAAK,eAAKR,IAAI,qBAAqBS,IAAI,aAC/C,kBAAC,EAAD,CAAQD,KAAK,eAAKR,IAAI,sBAAsBS,IAAI,aAChD,kBAAC,EAAD,CAAQD,KAAK,eAAKR,IAAI,oBAAoBS,IAAI,WAC9C,kBAAC,EAAD,CAAQD,KAAK,eAAKR,IAAI,iBAAiBS,IAAI,QAC3C,kBAAC,EAAD,CAAQD,KAAK,eAAKR,IAAI,iBAAiBS,IAAI,QAC3C,kBAAC,EAAD,CAAQD,KAAK,eAAKR,IAAI,gBAAgBS,IAAI,OAC1C,kBAAC,EAAD,CAAQD,KAAK,eAAKR,IAAI,mBAAmBS,IAAI,UAC7C,kBAAC,EAAD,CAAQD,KAAK,eAAKR,IAAI,mBAAmBS,IAAI,aCGlCe,G,wDAzBb,WAAYhD,GAAQ,IAAD,8BACjB,cAAMA,IAEDG,MAAQ,CACXiB,OAAQ,gBAGVpB,EAAMc,WAAWmC,cAAa,kBAAM,EAAKpC,SAAS,CAAEO,OAAQ,kBAC5DpB,EAAMc,WAAWoC,aAAY,kBAAM,EAAKrC,SAAS,CAAEO,OAAQ,iBAC3DpB,EAAMc,WAAWqC,cAAa,kBAAM,EAAKtC,SAAS,CAAEO,OAAQ,oBAT3C,E,qDAYT,IAAD,EAC2BR,KAAKZ,MAA/Bc,EADD,EACCA,WAAYT,EADb,EACaA,UACZe,EAAWR,KAAKT,MAAhBiB,OACR,OAAO,kBAAC,EAAkBgC,SAAnB,CAA4BzC,MAAOG,GAE3B,cAAXM,EACI,kBAAC,EAAD,MACA,kBAAC,EAAD,CAAkBf,UAAWA,EAAWe,OAAQA,S,GApB1CvB,IAAMiC,Y,QCAlBhB,EAAa,I,WCHjB,aAAe,oBACbF,KAAKyC,aAAe,GACpBzC,KAAK0C,kBAAoB,aACzB1C,KAAK2C,iBAAmB,aACxB3C,KAAK4C,oBAAsB,a,iDAGxBC,GACH7C,KAAKE,WAAW4C,OAAO,OAAQ9C,KAAKR,KAAMqD,K,6BAGrCE,EAAQC,GACbhD,KAAKyC,aAAaM,GAAUC,I,kCAGlBA,GACVhD,KAAK2C,iBAAmBK,I,mCAGbA,GACXhD,KAAK0C,kBAAoBM,I,mCAGdA,GACXhD,KAAK4C,oBAAsBI,I,8BAGrBxD,GAAO,IAAD,OACZQ,KAAK0C,oBAEL1C,KAAKR,KAAOA,GAAQ,YACpBQ,KAAKE,YAAa,IAAI+C,KACnBC,QAAQ,UACRC,QAEHnD,KAAKE,WAAWkD,GAAG,QAAQ,kBAAMC,QAAQC,IAAI,sBAC7CtD,KAAKE,WAAWkD,GAAG,QAAQ,SAAAP,GACzBQ,QAAQC,IAAI,UAAWT,GACvB,EAAKJ,aAAaI,QAEpB7C,KAAKE,WAAWqD,QAAQvD,KAAK4C,qBAE7B5C,KAAKE,WACFsD,QACAC,MAAK,WACJ,EAAKd,mBACL,EAAKzC,WAAW4C,OAAO,OAAQ,EAAKtD,SACnCkE,OAAM,SAAAC,GACPN,QAAQM,MAAM,oBAAqBA,EAAMC,SACzC,EAAKhB,6B,MD5CPnD,EAAY,CAChBC,IADgB,WACR,OAAOmE,OAAOC,SAASC,KAAKC,OAAO,IAAM,IACjD5D,IAFgB,SAEZL,GAAS8D,OAAOC,SAASC,KAAOhE,IAGtCkE,IAASC,OACP,kBAAC,IAAMC,WAAP,KACE,kBAAC,EAAD,CAAK1E,UAAWA,EAAWS,WAAYA,KAEzCkE,SAASC,eAAe,W","file":"static/js/main.f55ad534.chunk.js","sourcesContent":["import React from 'react';\r\n\r\nconst ConnectionContext = React.createContext(() => {});\r\n\r\nexport default ConnectionContext;\r\n","import React from 'react';\r\nimport ConnectionContext from './ConnectionContext';\r\nimport './ConnectionStatus.css';\r\n\r\nexport default class ConnectionStatus extends React.Component {\r\n  constructor(props) {\r\n    super(props);\r\n\r\n    const audio = React.createRef();\r\n    this.state = {\r\n      room: props.roomState.get(),\r\n      audio,\r\n    };\r\n    this.onChange = this.onChange.bind(this);\r\n  }\r\n\r\n  onChange(ev) {\r\n    const room = ev.target.value;\r\n    this.setState({ room });\r\n  }\r\n\r\n  submit(ev, connection) {\r\n    ev.preventDefault();\r\n    const { roomState } = this.props;\r\n    const { room, audio } = this.state;\r\n\r\n    roomState.set(room);\r\n    connection.connect(room);\r\n    audio.current.play();\r\n    return false;\r\n  }\r\n\r\n  render() {\r\n    const { status } = this.props;\r\n    const { room, audio } = this.state;\r\n    return <ConnectionContext.Consumer>{connection => {\r\n      return <div class=\"status\">\r\n        <audio ref={audio} src=\"/audio/click.mp3\" />\r\n        {\r\n        status === 'connecting'\r\n          ? <p>ü§ù Connecting...</p>\r\n          : <form onSubmit={ev => this.submit(ev, connection)}>\r\n              <input type=\"text\" placeholder=\"Room\" value={room} onChange={this.onChange} autoFocus />\r\n              <input type=\"submit\" value=\"üëã Connect\" />\r\n          </form>\r\n        }\r\n      </div>\r\n    }}</ConnectionContext.Consumer>;\r\n  }\r\n};","import React from 'react';\r\nimport ConnectionContext from './ConnectionContext';\r\n\r\nconst bounce = function (elem) {\r\n  elem.classList.add('bounce');\r\n  clearTimeout(elem.bouncer);\r\n  elem.bouncer = setTimeout(function () { elem.classList.remove('bounce'); }, 500);\r\n};\r\n\r\nconst Button = function ({ icon, src, alt }) {\r\n  return <ConnectionContext.Consumer>{function (connection) {\r\n    const button = React.createRef();\r\n    const audio = React.createRef();\r\n    connection.onPlay(icon, function () {\r\n      bounce(button.current);\r\n      audio.current.play();\r\n    });\r\n    return <>\r\n      <button ref={button} class=\"button\" id={`${icon}-button`}\r\n        title={alt} aria-title={alt}\r\n        onClick={() => connection.send(icon)}>{icon}</button>\r\n      <audio ref={audio} id={`${icon}-player`} src={src}></audio>\r\n    </>;\r\n  }}</ConnectionContext.Consumer>\r\n};\r\n\r\nexport default Button;\r\n","import React from 'react';\r\nimport Button from './Button';\r\nimport './SoundBoard.css';\r\n\r\nexport default function () {\r\n  return <div class=\"grid\">\r\n    <Button icon=\"üëè\" src=\"/audio/clap.mp3\" alt=\"Clap\" />\r\n    <Button icon=\"ü•≥\" src=\"/audio/party.mp3\" alt=\"Party\" />\r\n    <Button icon=\"ü§£\" src=\"/audio/laugh.mp3\" alt=\"Laugh\" />\r\n    <Button icon=\"ü•Å\" src=\"/audio/drum.mp3\" alt=\"Badum-tish\" />\r\n    <Button icon=\"üèÜ\" src=\"/audio/success.mp3\" alt=\"Success\" />\r\n    <Button icon=\"ü§Ø\" src=\"/audio/wow.mp3\" alt=\"Wow\" />\r\n    <Button icon=\"üòÆ\" src=\"/audio/ooh.mp3\" alt=\"Ooh\" />\r\n    <Button icon=\"ü§ë\" src=\"/audio/kaching.mp3\" alt=\"Kaching\"/>\r\n    <Button icon=\"ü•∫\" src=\"/audio/aww.mp3\" alt=\"Aww\" />\r\n    <Button icon=\"ü§î\" src=\"/audio/hmm.mp3\" alt=\"Hmm\" />\r\n    <Button icon=\"ü§®\" src=\"/audio/huh.mp3\" alt=\"Huh\" />\r\n    <Button icon=\"ü•±\" src=\"/audio/yawn.mp3\" alt=\"Yawn\" />\r\n    <Button icon=\"üòà\" src=\"/audio/evil.mp3\" alt=\"Evil\" />\r\n    <Button icon=\"ü§¶\" src=\"/audio/facepalm.mp3\" alt=\"Facepalm\" />\r\n    <Button icon=\"ü§¨\" src=\"/audio/boo.mp3\" alt=\"Boo\" />\r\n    <Button icon=\"üò±\" src=\"/audio/scream.mp3\" alt=\"Scream\" />\r\n    <Button icon=\"ü¶ó\" src=\"/audio/cricket.mp3\" alt=\"Crickets\" />\r\n    <Button icon=\"ü¶ñ\" src=\"/audio/dinosaur.mp3\" alt=\"Dinosaur\" />\r\n    <Button icon=\"üßè\" src=\"/audio/louder.mp3\" alt=\"Louder\" />\r\n    <Button icon=\"ü§´\" src=\"/audio/ssh.mp3\" alt=\"Ssh\" />\r\n    <Button icon=\"üëç\" src=\"/audio/yes.mp3\" alt=\"Yes\" />\r\n    <Button icon=\"üëé\" src=\"/audio/no.mp3\" alt=\"No\" />\r\n    <Button icon=\"üôÜ\" src=\"/audio/right.mp3\" alt=\"Right\" />\r\n    <Button icon=\"üôÖ\" src=\"/audio/wrong.mp3\" alt=\"Wrong\" />\r\n  </div>;\r\n}","import React from 'react';\nimport ConnectionContext from './ConnectionContext';\nimport ConnectionStatus from './ConnectionStatus';\nimport SoundBoard from './SoundBoard';\nimport './App.css';\n\nclass App extends React.Component {\n  constructor(props) {\n    super(props);\n\n    this.state = {\n      status: 'disconnected',\n    };\n\n    props.connection.onConnecting(() => this.setState({ status: 'connecting' }));\n    props.connection.onConnected(() => this.setState({ status: 'connected' }));\n    props.connection.onDisconnect(() => this.setState({ status: 'disconnected' }));\n  }\n\n  render() {\n    const { connection, roomState } = this.props;\n    const { status } = this.state;\n    return <ConnectionContext.Provider value={connection}>\n      {\n        status === 'connected'\n          ? <SoundBoard />\n          : <ConnectionStatus roomState={roomState} status={status} />\n      }      \n    </ConnectionContext.Provider>;\n  }\n}\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport Connection from './Connection';\n\nconst connection = new Connection();\n\nconst roomState = {\n  get() { return window.location.hash.substr(1) || ''; },\n  set(value) { window.location.hash = value; }\n};\n\nReactDOM.render(\n  <React.StrictMode>\n    <App roomState={roomState} connection={connection} />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n","import { HubConnectionBuilder } from '@microsoft/signalr';\r\n\r\nclass Connection {\r\n  constructor() {\r\n    this.playHandlers = {};\r\n    this.connectingHandler = () => {};\r\n    this.connectedHandler = () => {};\r\n    this.disconnectedHandler = () => {};\r\n  }\r\n\r\n  send(fx) {\r\n    this.connection.invoke('send', this.room, fx);\r\n  }\r\n\r\n  onPlay(action, callback) {\r\n    this.playHandlers[action] = callback;\r\n  }\r\n\r\n  onConnected(callback) {\r\n    this.connectedHandler = callback;\r\n  }\r\n\r\n  onConnecting(callback) {\r\n    this.connectingHandler = callback;\r\n  }\r\n\r\n  onDisconnect(callback) {\r\n    this.disconnectedHandler = callback;\r\n  }\r\n\r\n  connect(room) {\r\n    this.connectingHandler();\r\n\r\n    this.room = room || '%DEFAULT%';\r\n    this.connection = new HubConnectionBuilder()\r\n      .withUrl('/sound')\r\n      .build();\r\n\r\n    this.connection.on('join', () => console.log('Somebody joined'));\r\n    this.connection.on('play', fx => {\r\n      console.log('Playing', fx);\r\n      this.playHandlers[fx]();\r\n    });\r\n    this.connection.onclose(this.disconnectedHandler);\r\n\r\n    this.connection\r\n      .start()\r\n      .then(() => {\r\n        this.connectedHandler();\r\n        this.connection.invoke('join', this.room)\r\n      }).catch(error => {\r\n        console.error('Failed to connect', error.message);\r\n        this.disconnectedHandler();\r\n      });\r\n  }\r\n}\r\n\r\nexport default Connection;"],"sourceRoot":""}